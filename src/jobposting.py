# -*- coding: utf-8 -*-
"""jobposting

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yeB2Z_AJz0el63WURUiUYHd4-G-XmjWK
"""

!pip install pymongo

import re

from pymongo import MongoClient

MONGO_URI = "mongodb+srv://mohka:mohka@capstone.9ajag.mongodb.net/?retryWrites=true&w=majority&appName=Capstone"

client = MongoClient(MONGO_URI)

db = client["jobsDB"]

collection = db["jobsCollection"]  # Replace with your collection name

# Fetch and print a sample document
document = collection.find_one()
print("Sample Document:", document)

client.close()

SKILLS_LIST = [
    "Python", "SQL", "Machine Learning", "Data Analysis", "Java", "C++", "AWS",
    "Cloud Computing", "Deep Learning", "NLP", "Data Science", "Excel", "Linux",
    "Cybersecurity", "JavaScript", "Tableau", "TensorFlow", "Communication", "Leadership","SOX compliance"
]

# Define regex patterns for experience and education extraction
EXPERIENCE_PATTERN = r"(\d+)\s*(?:\+?-?)?\s*(?:years?|yrs?)\s*(?:of)?\s*(?:experience)?"
EDUCATION_PATTERN = r"(Bachelor’s degree|Master’s degree|PhD|Doctorate|Associate’s degree|High School Diploma)"

def extract_skills(text, skills_list):
    extracted_skills = [skill for skill in skills_list if re.search(r'\b' + re.escape(skill) + r'\b', str(text), re.IGNORECASE)]
    return extracted_skills

# Function to extract experience from job descriptions
def extract_experience(text):
    match = re.search(EXPERIENCE_PATTERN, str(text), re.IGNORECASE)
    return match.group(1) + " years" if match else "Not specified"

# Function to extract education requirements
def extract_education(text):
    match = re.search(EDUCATION_PATTERN, str(text), re.IGNORECASE)
    return match.group(0) if match else "Not specified"

# Function to extract education requirements
def extract_education(text):
    match = re.search(EDUCATION_PATTERN, str(text), re.IGNORECASE)
    return match.group(0) if match else "Not specified"

# Extract data from MongoDB and process job descriptions
job_data = []

for job in collection.find({}, {"_id": 1, "Job Title": 1, "Company Name": 1, "Location": 1, "Job Description": 1}):
    job_id = str(job["_id"])
    job_title = job.get("Job Title", "N/A")
    company = job.get("Company Name", "N/A")
    location = job.get("Location", "N/A")
    job_desc = str(job.get("Job Description", ""))  # Convert to string to avoid errors

    # Extract relevant details
    skills_found = extract_skills(job_desc, SKILLS_LIST)
    experience = extract_experience(job_desc)
    education = extract_education(job_desc)

    # Store extracted data
    job_data.append({
        "Job ID": job_id,
        "Job Title": job_title,
        "Company Name": company,
        "Location": location,
        "Extracted Skills": ", ".join(skills_found),  # Convert list to string
        "Experience Required": experience,
        "Education Requirement": education
    })

# Convert to Pandas DataFrame
import pandas as pd
df_jobs = pd.DataFrame(job_data)

# Save extracted data as CSV & Excel
df_jobs.to_csv("extracted_job_data.csv", index=False)
df_jobs.to_excel("extracted_job_data.xlsx", index=False, engine="openpyxl")

print("✅ Extracted job data successfully saved!")

# Display first few records
df_jobs.head()